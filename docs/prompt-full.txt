# Maklerportal – Projektbeschreibung & Prompt

Erstelle ein vollständig modular aufgebautes Maklerportal als Webanwendung mit Fokus auf moderner, responsiver Benutzeroberfläche. Die Anwendung dient als zentrale Plattform für Versicherungsmakler, deren Betreuer sowie Administratoren.

## Zielgruppen (Rollen)
1. Makler
2. Betreuer
3. Admin

Jede Rolle hat unterschiedliche Rechte und Zugriffsmöglichkeiten auf die Funktionen der Plattform.

## Rollen und ihre Aktionen in der Sidebar

### Makler
- **Dashboard**: Übersicht über aktuelle Verträge und Provisionen.
- **Verträge**: Verwaltung und Anzeige von Verträgen.
- **Provisionen**: Einsehen der eigenen Provisionen.
- **Dokumente**: Hochladen und Verwalten von Dokumenten.
- **Supportanfragen**: Erstellen und Verfolgen von Support-Tickets.
- **Termine**: Verwalten von Terminen und Erinnerungen.

### Betreuer
- **Dashboard**: Übersicht über zugewiesene Makler und deren Verträge.
- **Maklerübersicht**: Verwaltung der zugewiesenen Makler.
- **Provisionen**: Einsehen der Provisionen der zugewiesenen Makler.
- **Schulungen**: Planen und Verwalten von Schulungen für Makler.
- **Supportanfragen**: Bearbeiten von Support-Tickets der zugewiesenen Makler.
- **Termine**: Verwalten von Terminen und Erinnerungen.

### Admin
- **Dashboard**: Übersicht über alle Makler, Betreuer und Systemstatistiken.
- **Maklerübersicht**: Verwaltung aller Makler und Betreuer.
- **Einstellungen**: Konfiguration der Systemeinstellungen.
- **Berichte**: Generieren und Einsehen von Systemberichten.
- **System-Logs**: Einsehen und Analysieren von System-Logs.
- **Kunden**: Verwaltung der Kundenstammdaten.
- **AIDA Neuverträge**: Integration und Verwaltung von AIDA Neuverträgen.
- **AIDA Lebensversicherung**: Integration und Verwaltung von AIDA Lebensversicherungen.

## Anforderungen – Frontend
- Die GUI soll modern, responsiv und interaktiv sein („fancy look & feel“).
- Sidebar links wie bei WordPress (Tool-Menü)
- Topbar oben für Userinfos, Logout, Light/Dark Mode Toggle
- Zentraler Inhaltsbereich für Module

## Module (jeweils eigene HTML + JS-Datei)
1. Dashboard
2. Verträge
3. Angebotsrechner
4. Dokumente
5. Kommunikation
6. Provisionen
7. Support
8. Einstellungen

Jedes Modul lädt seinen HTML-Inhalt und initialisiert eine Dummy-Funktion über eine eigene JavaScript-Datei.




## Light/Dark Mode
- Umschaltbar per Button
- Einstellung wird in localStorage gespeichert

## Login
- Login-Simulation über login.html
- Auswahl der Rolle (Makler, Betreuer, Admin)
- Speicherung der Rolle in sessionStorage
- Weiterleitung zu index.html nach Login

## Projektstruktur (Maven-kompatibel, vorbereitet für Spring Boot Backend)
- Verwendung von Maven zur Projektorganisation
- Statisches Frontend unter src/main/resources/static/
- Java-Backend vorbereitbar unter src/main/java
- Späteres Backend via Spring Boot (REST, Auth etc.)

## Frontend-Technologien
- HTML, Vanilla JavaScript, CSS
- Bootstrap 5 (CDN)
- Bootstrap Icons (CDN)

## Ziel
Das Portal soll sofort im Browser bedienbar sein, ohne Backend – mit Möglichkeit zur späteren Erweiterung mit Spring Boot.


## Sidebar-Mappings
Jede Rolle hat eine Sidebar mit unterschiedlichen Modulen. Die Mappings der Module sind in `router.js` definiert:

```javascript
const moduleMapping = {
    'contracts': 'vertrage',
    'commission': 'provisionen',
    'users': 'makleruebersicht',
    'system': 'einstellungen',
    'reports': 'berichte',
    'logs': 'system-logs',
    'makler': 'makleruebersicht',
    'tickets': 'supportanfragen',
    'training': 'schulungen',
    'calendar': 'termine',
    'documents': 'dokumente',
    'customers': 'customers',
    'sys_eva_aida_neuvertraege': 'sys_eva_aida_neuvertraege',
    'sys_eva_aida_lv': 'sys_eva_aida_lv'
};
```

Alle Mappings sind korrekt und entsprechen den Modulnamen in der Codebase.

## Projektstruktur
